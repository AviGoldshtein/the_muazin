    version: '3.9'
    services:

      muazin-mongo:
        image: mongo:latest
        container_name: muazin-mongo
        networks:
          - muazin-net
        ports:
          - "27017:27017"
        volumes:
          - mongo_data:/data/db

      muazin-kafka:
#        image: apache/kafka:3.7.0
        image: apache/kafka
        container_name: muazin-kafka
        ports:
          - "9092:9092"
        environment:
          # Configure listeners for both docker and host communication
          KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
          KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

          # Settings required for KRaft mode
          KAFKA_NODE_ID: 1
          KAFKA_PROCESS_ROLES: broker,controller
          KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

          # Listener to use for broker-to-broker communication
          KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

          # Required for a single node cluster
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

        networks:
          - muazin-net

      muazin-es:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
        container_name: muazin-es
        environment:
          - xpack.security.enabled=false
#          - ES_JAVA_OPTS="-Xms1g -Xmx1g"
          - discovery.type=single-node
        ports:
          - "9200:9200"
        volumes:
          - elastic_data:/usr/share/elasticsearch/data
        networks:
          - muazin-net
        healthcheck:
          test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health" ]
          interval: 10s
          timeout: 5s
          retries: 10

      muazin-kibana:
        image: docker.elastic.co/kibana/kibana:8.15.0
        container_name: muazin-kibana
        environment:
          - ELASTICSEARCH_HOSTS=http://muazin-es:9200
        ports:
          - "5601:5601"
        depends_on:
          - muazin-es
        networks:
          - muazin-net

      data_loader_src:
        build:
          context: .
          dockerfile: services/data_loader_src/Dockerfile
        image: data_loader_src:latest
        networks:
          - muazin-net
        environment:
          - KAFKA_BOOTSTRAP=muazin-kafka:9092
        depends_on:
          muazin-es:
            condition: service_healthy

      data_prossesor:
        build:
          context: .
          dockerfile: services/data_prossesor/Dockerfile
        image: data_prossesor:latest
        networks:
          - muazin-net
        environment:
          - KAFKA_BOOTSTRAP=muazin-kafka:9092
          - ELASTIC_URI=http://muazin-es:9200
          - MONGO_URI=mongodb://muazin-mongo:27017
          - MONGO_DB=mydb
        depends_on:
          muazin-es:
            condition: service_healthy

      speech_to_text:
        build:
          context: .
          dockerfile: services/speech_to_text/Dockerfile
        image: speech_to_text:latest
        networks:
          - muazin-net
        environment:
          - KAFKA_BOOTSTRAP=muazin-kafka:9092
          - ELASTIC_URI=http://muazin-es:9200
          - MONGO_URI=mongodb://muazin-mongo:27017
          - MONGO_DB=mydb
        depends_on:
          muazin-es:
            condition: service_healthy

      hostility_classifier:
        build:
          context: .
          dockerfile: services/hostility_classifier/Dockerfile
        image: hostility_classifier:latest
        networks:
          - muazin-net
        environment:
          - KAFKA_BOOTSTRAP=muazin-kafka:9092
          - ELASTIC_URI=http://muazin-es:9200
        depends_on:
          muazin-es:
            condition: service_healthy

    volumes:
      elastic_data:
      mongo_data:

    networks:
      muazin-net:
        driver: bridge